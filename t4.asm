.ORIG x3000

    LEA R0, PROMPT       ; Загрузить адрес строки приглашения в R0
    PUTS                 ; Вывести строку приглашения

    LEA R1, NUMBERS      ; Загрузить адрес массива чисел в R1
    LEA R4, ORIGINAL     ; Загрузить адрес массива для сохранения исходных чисел
    LD R2, COUNT         ; Загрузить счетчик в R2

READ_NUMBERS
    GETC                 ; Считать символ с клавиатуры в R0
    OUT                  ; Вывести считанный символ
    STR R0, R4, #0       ; Сохранить исходный символ
    ADD R4, R4, #1       ; Перейти к следующему месту в массиве исходных чисел
    LD R3, NEG48         ; Загрузить -48 в R3
    ADD R0, R0, R3       ; Преобразовать ASCII-код в число
    STR R0, R1, #0       ; Сохранить число в массив
    ADD R1, R1, #1       ; Перейти к следующему месту в массиве
    ADD R2, R2, #-1      ; Уменьшить счетчик
    BRp READ_NUMBERS     ; Повторять, пока счетчик не исчерпан

    LEA R1, NUMBERS      ; Адрес начала массива
    LD R2, COUNT         ; Счетчик чисел
    ADD R2, R2, #-1      ; Уменьшить счетчик, так как сортируем пары чисел

SORT_LOOP
    LD R4, COUNT         ; Счетчик для внутреннего цикла
    ADD R4, R4, #-1
    LEA R3, NUMBERS      ; Сброс R3 к началу массива

INNER_LOOP
    LDR R0, R3, #0       ; Загрузить текущее число
    LDR R1, R3, #1       ; Загрузить следующее число
    NOT R5, R1
    ADD R5, R5, #1
    ADD R5, R0, R5       ; Сравнить числа
    BRn SKIP_SWAP        ; Если R0 < R1, перейти к следующей итерации
    STR R1, R3, #0       ; Меняем местами
    STR R0, R3, #1
SKIP_SWAP
    ADD R3, R3, #1       ; Перейти к следующему числу
    ADD R4, R4, #-1      ; Уменьшить внутренний счетчик
    BRp INNER_LOOP       ; Повторять внутренний цикл

    ADD R2, R2, #-1      ; Уменьшить внешний счетчик
    BRp SORT_LOOP        ; Повторять внешний цикл

    ; Вывод новой строки для разделения введенной и отсортированной строк
    LD R0, NEWLINE
    OUT

    ; Вывод исходной введенной строки
    LEA R1, ORIGINAL
    LD R2, COUNT
PRINT_ORIGINAL
    LDR R0, R1, #0       ; Загрузить символ из исходной строки
    OUT                  ; Вывести символ
    ADD R1, R1, #1       ; Перейти к следующему символу
    ADD R2, R2, #-1      ; Уменьшить счетчик
    BRp PRINT_ORIGINAL   ; Повторять до вывода всех символов

    ; Вывод новой строки для разделения исходной и отсортированной строк
    LD R0, NEWLINE
    OUT

    ; Вывод отсортированных чисел
    LEA R1, NUMBERS
    LD R2, COUNT
PRINT_NUMBERS
    LDR R0, R1, #0       ; Загрузить число из массива
    LD R3, POS48         ; Загрузить 48 в R3
    ADD R0, R0, R3       ; Преобразовать число в ASCII-код
    OUT                  ; Вывести число
    ADD R1, R1, #1       ; Перейти к следующему числу
    ADD R2, R2, #-1      ; Уменьшить счетчик
    BRp PRINT_NUMBERS    ; Повторять до вывода всех чисел

    HALT                 ; Остановка программы

PROMPT .STRINGZ "Enter 10 numbers: "
NUMBERS .BLKW 10        ; Массив для хранения чисел
ORIGINAL .BLKW 10       ; Массив для хранения исходных символов
COUNT .FILL #10         ; Счетчик чисел для ввода
NEG48 .FILL #-48        ; Значение -48 для преобразования ASCII в число
POS48 .FILL #48         ; Значение 48 для преобразования числа в ASCII
NEWLINE .FILL x000A     ; Значение ASCII для перевода строки
.END
